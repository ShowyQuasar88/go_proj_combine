syntax = "proto3";
package kratos.api;

option go_package = "backend/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  Trace trace = 3;      // 添加链路追踪配置
  Log log = 4;          // 添加日志配置
  Security security = 5;// 添加安全配置
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    string password = 3;
    google.protobuf.Duration read_timeout = 4;
    google.protobuf.Duration write_timeout = 5;
  }
  Database database = 1;
  Redis redis = 2;
}

message Trace {
  string endpoint = 1;    // 链路追踪收集器地址
  double sampler = 2;     // 采样率
  string environment = 3; // 环境标识(dev/prod等)
}

message Log {
  string level = 1;     // 日志级别
  string filename = 2;  // 日志文件路径
  int32 maxSize = 3;    // 单个日志文件最大大小(MB)
  int32 maxAge = 4;     // 日志保留天数
  int32 maxBackups = 5; // 保留的旧日志文件个数
}

message Security {
  string aesKey = 1;    // AES 加密密钥
  string aesIv = 2;     // AES 初始化向量
  int32 bcryptCost = 3; // bcrypt 加密成本

  // JWT
  message Jwt {
    string secret = 1; // JWT密钥
    int32 expire = 2;  // JWT过期时间(秒)
    int32 refreshExpire = 3; // 刷新token过期时间(秒)
  }
  Jwt jwt = 4;
}