syntax = "proto3";

package v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "v1/common.proto";

option go_package = "backend/api/v1;v1";

// 用户服务接口定义
service User {
    // 用户注册
    rpc Register (RegisterRequest) returns (Response) {
        option (google.api.http) = {
            post: "/v1/user/register"
            body: "*"   // 使用 * 表示整个消息作为请求体
        };
    }
    rpc Login (LoginRequest) returns (Response) {
        option (google.api.http) = {
            post: "/v1/user/login"
            body: "*"
        };
    }
    rpc Logout (google.protobuf.Empty) returns (Response) {
        option (google.api.http) = {
            post: "/v1/user/logout"
            body: "*"
        };
    }
}

message RegisterRequest {
    string username = 1 [(validate.rules).string = {
        min_len: 3,
        max_len: 20,
        pattern: "^[^<>?%&/\\\\]+$",    // 不允许特殊字符
        ignore_empty: false
    }];
    string password = 2 [(validate.rules).string = {
        min_len: 8,
        max_len: 20,
        ignore_empty: false
    }];
    string phone = 3 [(validate.rules).string = {
        pattern: "^1[3-9]\\d{9}$",  // 中国大陆手机号格式
        ignore_empty: true          // 允许为空
    }];
    string email = 4 [(validate.rules).string = {
        email: true,        // 使用内置的email格式验证
        ignore_empty: true  // 允许为空
    }];
}

message LoginRequest {
    string username = 1 [(validate.rules).string = {
        min_len: 3,
        max_len: 20,
        pattern: "^[^<>?%&/\\\\]+$",    // 不允许特殊字符
        ignore_empty: false
    }];
    string password = 2 [(validate.rules).string = {
        min_len: 8,
        max_len: 20,
        ignore_empty: false
    }];
}

message LoginResponse {
    string token = 1;
    int64 expiresIn = 2;
    UserInfo userInfo = 3;
}

message UserInfo {
    string id = 1;
    string username = 2;
}
